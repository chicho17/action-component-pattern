{"version":3,"sources":["TodoActions/Editor.tsx","TodoActions/DeleteConfirmation.tsx","TodoActions/useTodoUpdateMutation.ts","TodoActions/TodoActions.tsx","TodoActions/useTodoActions.ts","TodoItem/Toggler.tsx","TodoItem/TodoCard.tsx","TodoItem/TodoItem.tsx","App.js","index.js"],"names":["Editor","_ref","todo","onSubmit","onCancel","show","isWIP","_React$useState","React","useState","value","_React$useState2","Object","slicedToArray","setValue","onEdit","useCallback","objectSpread2","useEffect","react_default","a","createElement","modal","onClose","closeable","isOpen","animate","autoFocus","size","SIZE","default","role","ROLE","dialog","styled_components","input","disabled","onChange","e","target","placeholder","modal_button","onClick","DeleteConfirmation","getNetworkPromise","resolveWith","Promise","res","setTimeout","Math","floor","random","useTodoUpdateMutation","onSuccess","onError","then","updatedTodo","catch","TodoActions","children","_useTodoActions","_viewState$activeActi","onUpdate","onDelete","_useState","activeAction","loading","_useState2","viewState","setViewState","_useTodoUpdateMutatio","updateTodo","_useTodoUpdateMutatio3","deleteTodo","actions","useMemo","actionList","permissions","canEdit","push","type","label","icon","canDelete","onAction","action","prev","completed","onOverlayAction","payload","id","onEditorSubmit","onDeleteSubmit","activeActionType","onOverlayCancel","state","selectedActionType","length","undefined","useTodoActions","Fragment","Editor_Editor","DeleteConfirmation_DeleteConfirmation","Toggler","checkbox_checkbox","checked","labelPlacement","LABEL_PLACEMENT","right","block","$style","textDecoration","TodoCard","toggleAction","find","act","onToggle","filteredActions","filter","card","overrides","Root","style","opacity","cursor","display","alignItems","minWidth","flex","Toggler_Toggler","marginLeft","map","key","button_button","shape","SHAPE","round","height","width","TodoItem","TodoActions_TodoActions","_ref2","TodoCard_TodoCard","engine","Styletron","Centered","styled","justifyContent","TODOS","App","todoList","setTodoList","_todoList","td","showSingleTodoItem","URL","window","location","href","searchParams","has","dist_browser_es5_es","base_provider","theme","LightTheme","className","concat","data-id","kind","KIND","minimal","mini","todoItem","TodoItem_TodoItem","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e053f674.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalButton,\n  SIZE,\n  ROLE\n} from \"baseui/modal\";\nimport { Input } from \"baseui/input\";\n\nexport const Editor = ({ todo, onSubmit, onCancel, show, isWIP }) => {\n  const [value, setValue] = React.useState(todo.value);\n  const onEdit = useCallback(() => {\n    onSubmit({ ...todo, value });\n  }, [value, todo, onSubmit]);\n  useEffect(() => {\n    setValue(todo.value);\n  }, [todo.value, show]);\n  return (\n    <Modal\n      onClose={onCancel}\n      closeable\n      isOpen={show}\n      animate\n      autoFocus\n      size={SIZE.default}\n      role={ROLE.dialog}\n    >\n      <ModalHeader>Edit</ModalHeader>\n      <ModalBody>\n        <Input\n          disabled={isWIP}\n          value={value}\n          //@ts-ignore\n          onChange={e => setValue(e.target.value)}\n          placeholder=\"Controlled Input\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton disabled={isWIP} onClick={onCancel}>\n          Cancel\n        </ModalButton>\n        <ModalButton disabled={isWIP} onClick={onEdit}>\n          Submit\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalButton,\n  SIZE,\n  ROLE\n} from \"baseui/modal\";\n\nexport const DeleteConfirmation = ({ onSubmit, onCancel, show, isWIP }) => {\n  return (\n    <Modal\n      onClose={onCancel}\n      closeable\n      isOpen={show}\n      animate\n      autoFocus\n      size={SIZE.default}\n      role={ROLE.dialog}\n    >\n      <ModalHeader>Delete???</ModalHeader>\n      <ModalBody>You sure you want to delete?</ModalBody>\n      <ModalFooter>\n        <ModalButton disabled={isWIP} onClick={onCancel}>\n          Cancel\n        </ModalButton>\n        <ModalButton disabled={isWIP} onClick={onSubmit}>\n          Yes, delete!!!!\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { useCallback } from \"react\";\n\n/* a way to mock network delay */\nfunction getWaitTime() {\n  return 200 + Math.floor(Math.random() * 500);\n}\n\nfunction getNetworkPromise(resolveWith) {\n  return new Promise(res => setTimeout(() => res(resolveWith), getWaitTime()));\n}\n\nexport const useTodoUpdateMutation = ({ onSuccess, onError }) => {\n  /*\n    use actual useMutation\n  */\n\n  const mutate = useCallback(\n    todo =>\n      getNetworkPromise(todo)\n        .then(updatedTodo => {\n          onSuccess(updatedTodo);\n          return updatedTodo;\n        })\n        .catch(onError),\n    [onSuccess, onError]\n  );\n\n  return [mutate];\n};\n","import React from \"react\";\nimport { Editor } from \"./Editor\";\nimport { DeleteConfirmation } from \"./DeleteConfirmation\";\n\nimport { useTodoActions } from \"./useTodoActions\";\n\nconst TodoActions = ({ children, todo, onUpdate, onDelete }) => {\n  const {\n    actions,\n    state,\n    onAction,\n    onEditorSubmit,\n    onDeleteSubmit,\n    onOverlayCancel\n  } = useTodoActions({ todo, onUpdate, onDelete }); //All the business logic is contained inside the hook.\n\n  return (\n    <>\n      {children({\n        actions,\n        state,\n        onAction\n      })}\n      {/* \n          render all the temporary components which are\n          triggered during handling of actions \n      */}\n      <Editor\n        show={state.selectedActionType === \"EDIT\"}\n        todo={todo}\n        onSubmit={onEditorSubmit}\n        onCancel={onOverlayCancel}\n        isWIP={state.loading}\n      />\n      <DeleteConfirmation\n        show={state.selectedActionType === \"DELETE\"}\n        onSubmit={onDeleteSubmit}\n        onCancel={onOverlayCancel}\n        isWIP={state.loading}\n      />\n    </>\n  );\n};\n\nexport { TodoActions };\n","import { useCallback, useState, useMemo } from \"react\";\nimport { useTodoUpdateMutation } from \"./useTodoUpdateMutation\";\n\n\ntype Action = {\n  type: string;\n  label: string;\n  icon?: string;\n};\n\ntype ViewState = {\n  activeAction: Action | null;\n  loading: boolean;\n}\n\nconst useTodoActions = ({ todo, onUpdate, onDelete }) => {\n  const [viewState, setViewState] = useState<ViewState>({\n    activeAction: null,\n    loading: false,\n  });\n\n  const [updateTodo] = useTodoUpdateMutation({\n    onSuccess: () => {},\n    onError: () => {},\n  });\n  const [deleteTodo] = useTodoUpdateMutation({\n    onSuccess: () => {},\n    onError: () => {},\n  });\n  /*\n    create actions here\n  */\n  const actions = useMemo(() => {\n    const actionList: Action[] = [];\n    if (todo.permissions.canEdit) {\n      actionList.push({ type: \"TOGGLE\", label: \"Toggle Status\" });\n      actionList.push({ type: \"EDIT\", icon: \"✎\", label: \"Edit todo\" });\n    }\n    if (todo.permissions.canDelete) {\n      actionList.push({ type: \"DELETE\", icon: \"🗑\", label: \"Delete todo\" });\n    }\n    return actionList;\n  }, [todo.permissions]);\n\n  /*\n    the handler which is passed to the child function\n    for handling all the actions\n  */\n  const onAction = useCallback(\n    (action) => {\n      switch (action.type) {\n        case \"DELETE\": {\n          setViewState((prev) => ({ ...prev, activeAction: action }));\n          break;\n        }\n        case \"EDIT\": {\n          setViewState((prev) => ({ ...prev, activeAction: action }));\n          break;\n        }\n        case \"TOGGLE\": {\n          setViewState((prev) => ({ ...prev, loading: true }));\n          updateTodo({ ...todo, completed: !todo.completed }).then(\n            (updatedTodo) => {\n              setViewState((prev) => ({\n                ...prev,\n                activeAction: null,\n                loading: false,\n              }));\n\n              // dispatch to update in store\n              onUpdate(updatedTodo);\n            }\n          );\n          break;\n        }\n      }\n    },\n    [updateTodo, todo, onUpdate]\n  );\n\n  /*\n    handling actions from all the temporary components mounted\n    as a result of users' actions\n  */\n  const onOverlayAction = useCallback(\n    (action) => {\n      setViewState((prev) => ({ ...prev, loading: true }));\n      switch (action.type) {\n        case \"ON_EDIT_SUBMIT\":\n          updateTodo(action.payload.todo).then((updatedTodo) => {\n            setViewState((prev) => ({\n              ...prev,\n              activeAction: null,\n              loading: false,\n            }));\n\n            // dispatch to update in store\n            onUpdate(updatedTodo);\n          });\n          break;\n        case \"ON_DELETE_SUBMIT\":\n          deleteTodo(action.payload.todo.id).then(() => {\n            setViewState((prev) => ({\n              ...prev,\n              activeAction: null,\n              loading: false,\n            }));\n\n            // dispatch to update in store\n            onDelete(action.payload.todo);\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [updateTodo, deleteTodo, onDelete, onUpdate]\n  );\n\n  const onEditorSubmit = useCallback(\n    (todo) => {\n      return onOverlayAction({ type: \"ON_EDIT_SUBMIT\", payload: { todo } });\n    },\n    [onOverlayAction]\n  );\n\n  const onDeleteSubmit = useCallback(() => {\n    return onOverlayAction({ type: \"ON_DELETE_SUBMIT\", payload: { todo } });\n  }, [onOverlayAction, todo]);\n\n  const activeActionType = viewState.activeAction?.type;\n\n  const onOverlayCancel = useCallback(() => {\n    setViewState((prev) => ({ ...prev, activeAction: null }));\n  }, []);\n\n  const state = useMemo(\n    () => ({\n      selectedActionType: activeActionType,\n      loading: viewState.loading,\n    }),\n    [activeActionType, viewState.loading]\n  );\n\n  return {\n    actions,\n    state,\n    onAction: actions.length ? onAction : undefined,\n    onEditorSubmit,\n    onDeleteSubmit,\n    onOverlayCancel,\n  };\n};\n\nexport { useTodoActions };\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\n\nimport { Checkbox, LABEL_PLACEMENT } from \"baseui/checkbox\";\n\nconst Toggler = ({ onChange, todo, disabled }) => (\n  <Checkbox\n    disabled={disabled}\n    checked={todo.completed}\n    onChange={onChange}\n    labelPlacement={LABEL_PLACEMENT.right}\n  >\n    <Block $style={todo.completed ? { textDecoration: \"line-through\" } : {}}>\n      {todo.value}\n    </Block>\n  </Checkbox>\n);\n\nexport { Toggler };\n","import React, { useCallback, useMemo } from \"react\";\nimport { Card } from \"baseui/card\";\nimport { Block } from \"baseui/block\";\n\nimport { Button, SHAPE } from \"baseui/button\";\nimport { Toggler } from \"./Toggler\";\n\n/*\n  render actions as you want\n*/\nconst TodoCard = ({ todo, actions, onAction, state }) => {\n  const { selectedActionType, loading } = state;\n\n  /**\n   * extracting out an action to render it differently\n   */\n  const toggleAction = actions.find(act => act.type === \"TOGGLE\");\n  const onToggle = useCallback(() => {\n    onAction(toggleAction);\n  }, [onAction, toggleAction]);\n\n  const filteredActions = useMemo(\n    () => actions.filter(act => act.type !== \"TOGGLE\"),\n    [actions]\n  );\n\n  return (\n    <Card\n      overrides={\n        loading\n          ? { Root: { style: { opacity: \"0.4\", cursor: \"not-allowed\" } } }\n          : undefined\n      }\n    >\n      <Block display=\"flex\" alignItems=\"center\" minWidth=\"300px\">\n        <Block flex=\"1\">\n          <Toggler\n            onChange={onToggle}\n            todo={todo}\n            disabled={!toggleAction /* using `toggleAction` as a flag */}\n          />\n        </Block>\n        <Block marginLeft=\"auto\" flex=\"0 0 auto\" display=\"flex\">\n          {filteredActions.map(action => {\n            /* render actions as you like */\n\n            return (\n              <Block marginLeft=\"10px\" flex=\"0 0 auto\" key={action.type}>\n                <Button\n                  shape={SHAPE.round}\n                  disabled={loading}\n                  onClick={() => onAction(action)}\n                >\n                  <Block height=\"20px\" width=\"20px\">\n                    {action.icon}\n                  </Block>\n                </Button>\n              </Block>\n            );\n          })}\n        </Block>\n      </Block>\n    </Card>\n  );\n};\n\nexport { TodoCard };\n","import React from \"react\";\nimport { TodoActions } from \"../TodoActions\";\nimport { TodoCard } from \"./TodoCard\";\n\nexport const TodoItem = ({ todo, onUpdate, onDelete }) => {\n  return (\n    /* \n      RenderProp for\n      1. generating `actions` and action handlers\n      2. handle mounting of any Modals/Popovers/FullScreenForms\n    */\n    <TodoActions todo={todo} onUpdate={onUpdate} onDelete={onDelete}>\n      {({ actions, state, onAction }) => {\n        return (\n          <TodoCard\n            todo={todo}\n            actions={actions}\n            state={state}\n            onAction={onAction}\n          />\n        );\n      }}\n    </TodoActions>\n  );\n};\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport { Button, SIZE, KIND } from \"baseui/button\";\nimport \"./styles.css\";\n\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { LightTheme, BaseProvider, styled } from \"baseui\";\n\nimport { TodoItem } from \"./TodoItem\";\n\nconst engine = new Styletron();\nconst Centered = styled(\"div\", {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"100%\",\n});\n\nconst TODOS = [\n  {\n    value: \"Waking up at 9\",\n    id: 1,\n    completed: false,\n    permissions: {\n      canEdit: false,\n      canDelete: true,\n    },\n  },\n  {\n    value: \"Cooking lunch\",\n    id: 2,\n    completed: true,\n    permissions: {\n      canDelete: true,\n      canEdit: true,\n    },\n  },\n  {\n    value: \"Enjoying a power nap\",\n    id: 3,\n    completed: false,\n    permissions: {\n      canDelete: false,\n      canEdit: true,\n    },\n  },\n];\n\nexport default function App() {\n  const [todoList, setTodoList] = useState(TODOS);\n\n  const onUpdate = useCallback(\n    (todo) => {\n      setTodoList((_todoList) => {\n        return _todoList.map((td) => (td.id === todo.id ? todo : td));\n      });\n    },\n    [setTodoList]\n  );\n\n  const onDelete = useCallback(\n    (todo) => {\n      setTodoList((_todoList) => {\n        return _todoList.filter((td) => td.id !== todo.id);\n      });\n    },\n    [setTodoList]\n  );\n\n  const showSingleTodoItem = useMemo(\n    () => new URL(window.location.href).searchParams.has(\"onlyOneTodoItem\"),\n    []\n  );\n\n  return (\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={LightTheme}>\n        <Centered>\n          <div className={`App ${showSingleTodoItem ? 'App-single-todo': ''}`}>\n            <h1>Action Component in action</h1>\n            <Button\n              data-id=\"reset\"\n              onClick={() => setTodoList(TODOS)}\n              kind={KIND.minimal}\n              size={SIZE.mini}\n            >\n              Reset\n            </Button>\n            <ul>\n              {todoList.map((todoItem) => (\n                <TodoItem\n                  key={todoItem.id}\n                  todo={todoItem}\n                  onUpdate={onUpdate}\n                  onDelete={onDelete}\n                />\n              ))}\n            </ul>\n          </div>\n        </Centered>\n      </BaseProvider>\n    </StyletronProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}